# This workflow will upload a Python Package using Twine
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries
# This workflow will publish a new docker image
# For more information see: https://docs.docker.com/ci-cd/github-actions/

name: Publish Python Package & Docker Image

on:
  workflow_dispatch

jobs:
  publish-to-pypi:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine
      - name: Build and publish
        env:
          TWINE_USERNAME: ${{ secrets.PIP_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PIP_PASSWORD }}
        run: |
          python setup.py sdist bdist_wheel
          twine upload dist/*
      - name: Push new tag
        run: |
          git config --global user.name "Tag Bot"
          git config --global user.email "hello@lucidtech.ai"
          version_name=$(python setup.py --version)
          git tag -a $version_name -m "Version $version_name"
          git push origin $version_name
  publish-to-dockerhub:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Get version
        id: get_version
        run: |
          echo "::set-output name=version::$(cat synthetic/__version__.py | grep version | grep -oP '\d+\.\d+(?=\.\d+)')"
      - name: Build and push version
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: lucidtechai/synthetic:${{ steps.get_version.outputs.version }}
      - name: Build and push latest
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: lucidtechai/synthetic:latest
